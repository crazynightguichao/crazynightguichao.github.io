(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{174:function(t,a,s){"use strict";s.r(a);var _=s(0),r=Object(_.a)({},(function(){var t=this.$createElement;this._self._c;return this._m(0)}),[function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"content"},[s("h2",{attrs:{id:"http"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#http"}},[t._v("#")]),t._v(" HTTP")]),t._v(" "),s("h2",{attrs:{id:"一、-tcp和udp的区别和使用场景？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一、-tcp和udp的区别和使用场景？"}},[t._v("#")]),t._v(" 一、 TCP和UDP的区别和使用场景？")]),t._v(" "),s("h4",{attrs:{id:"一、tcp和udp的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一、tcp和udp的区别"}},[t._v("#")]),t._v(" 一、TCP和UDP的区别")]),t._v(" "),s("h5",{attrs:{id:"_1-连接"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-连接"}},[t._v("#")]),t._v(" 1. 连接")]),t._v(" "),s("p",[t._v("TCP： 是面向连接的传输协议，即：传输数据之前必须先建立好连接。\nUDP: 是属于无连接的传输协议。")]),t._v(" "),s("h5",{attrs:{id:"_2-服务对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-服务对象"}},[t._v("#")]),t._v(" 2. 服务对象")]),t._v(" "),s("p",[t._v("TCP: 是点对点的两点之间的服务，即：一条TCP连接只能有两个端点。\nUDP: 支持一对一、一对多、多对一、多对多的交互通信。")]),t._v(" "),s("h5",{attrs:{id:"_3-可靠性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-可靠性"}},[t._v("#")]),t._v(" 3. 可靠性")]),t._v(" "),s("p",[t._v("TCP： 是可靠的传输协议，进行的是可靠交付，即：无差错、不丢失、不重复、按序到达等。\nUDP： 是不可靠的传输协议，只是尽最大努力交付，不能保证可靠交付。")]),t._v(" "),s("h5",{attrs:{id:"_4-拥塞控制-流量控制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-拥塞控制-流量控制"}},[t._v("#")]),t._v(" 4. 拥塞控制&流量控制")]),t._v(" "),s("p",[t._v("TCP： 有拥塞控制和流量控制保证数据传输的安全性。\nUDP： 没有拥塞控制，当网络拥塞时不会影响源主机的发送效率。")]),t._v(" "),s("h5",{attrs:{id:"_5-报文长度"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-报文长度"}},[t._v("#")]),t._v(" 5. 报文长度")]),t._v(" "),s("p",[t._v("TCP： 属于“动态报文长度”，即：TCP的报文长度是根据接收方的窗口大小和当前网络拥塞情况来决定的。\nUDP: 是面向报文的，它是保留上面传下来的报文边界，不合并，不拆分。")]),t._v(" "),s("h5",{attrs:{id:"_6-首部开销"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-首部开销"}},[t._v("#")]),t._v(" 6. 首部开销")]),t._v(" "),s("p",[t._v("TCP: 首部开销大，因为首部就占了20个字节。\nUDP： 首部开销相对小一点，只占了8个字节。 （eg: UDP的8个字节分布在：源端口、目的端口、数据长度、校验和）")]),t._v(" "),s("h4",{attrs:{id:"二、tcp和udp的适用场景"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二、tcp和udp的适用场景"}},[t._v("#")]),t._v(" 二、TCP和UDP的适用场景")]),t._v(" "),s("p",[t._v("根据上述特点，可知：")]),t._v(" "),s("ul",[s("li",[t._v("TCP 是可靠的传输协议，但传输速度慢；")]),t._v(" "),s("li",[t._v("而UDP 是不可靠的传输协议，但传输速度快；")]),t._v(" "),s("li",[t._v("TCP的适用场景： 要求通信数据的完整性和准确性较高，eg: 文件传输、邮件发送与接收、重要状态的更新等。")]),t._v(" "),s("li",[t._v("UDP的适用场景： 要求通信的响应度高，对数据信息的安全性和完整性要求相对较低，常用于实时通信，eg: 网络电话、网络视频、实时通信等。")])]),t._v(" "),s("h2",{attrs:{id:"二、-quic基于udp怎么保证可靠性？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二、-quic基于udp怎么保证可靠性？"}},[t._v("#")]),t._v(" 二、 quic基于udp怎么保证可靠性？")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("QUIC是一种新的传输 方式，与TCP相比可以减少延迟。 表面上，QUIC与在UDP上实现的TCP + TLS + \nHTTP /2非常相似。\n由于TCP是在操作系统内核和中间件固件中实现的，所以对TCP进行重大改变几乎是不可能的。\n但是，由于QUIC是建立在UDP之上的，所以没有这样的限制。\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("h4",{attrs:{id:"quic相比于上述介绍的http、https和http2协议最大的不同就在于，其传输层采用的是udp协议而不是tcp协议，因此其具备的特性有以下几点："}},[s("a",{staticClass:"header-anchor",attrs:{href:"#quic相比于上述介绍的http、https和http2协议最大的不同就在于，其传输层采用的是udp协议而不是tcp协议，因此其具备的特性有以下几点："}},[t._v("#")]),t._v(" QUIC相比于上述介绍的HTTP、HTTPS和HTTP2协议最大的不同就在于，其传输层采用的是UDP协议而不是TCP协议，因此其具备的特性有以下几点：")]),t._v(" "),s("ul",[s("li",[t._v("0-RTT 建联(首次建联除外)")]),t._v(" "),s("li",[t._v("类似TCP的可靠传输")]),t._v(" "),s("li",[t._v("类似TLS的加密传输，支持完美前向安全")]),t._v(" "),s("li",[t._v("用户空间的拥塞控制，最新的BBR算法")]),t._v(" "),s("li",[t._v("支持h2的基于流的多路复用， 但没有TCP的HOL问题")]),t._v(" "),s("li",[t._v("前向纠错FEC")]),t._v(" "),s("li",[t._v("类似MPTCP的Connection migration")])])])}],!1,null,null,null);a.default=r.exports}}]);